<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome Icons -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <!-- Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    
    <style>
        body {
            background: linear-gradient(135deg, #1e1e2e 0%, #2d1b69 100%);
            color: #ffffff;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        .navbar {
            background: rgba(0, 0, 0, 0.8) !important;
            backdrop-filter: blur(10px);
        }
        
        .card {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
        }
        
        .card-header {
            background: rgba(255, 255, 255, 0.05);
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }
        
        .stat-card {
            transition: transform 0.3s ease;
        }
        
        .stat-card:hover {
            transform: translateY(-5px);
        }
        
        .rank-badge {
            display: inline-block;
            padding: 0.25rem 0.5rem;
            border-radius: 0.25rem;
            font-size: 0.875rem;
            font-weight: bold;
        }
        
        .rank-E { background-color: #6c757d; }
        .rank-D { background-color: #28a745; }
        .rank-C { background-color: #17a2b8; }
        .rank-B { background-color: #ffc107; color: #000; }
        .rank-A { background-color: #fd7e14; }
        .rank-S { background-color: #dc3545; }
        .rank-National { background: linear-gradient(45deg, #ffd700, #ffed4e); color: #000; }
        
        .table-dark {
            background-color: rgba(0, 0, 0, 0.3);
        }
        
        .progress {
            background-color: rgba(255, 255, 255, 0.1);
        }
        
        .btn-primary {
            background: linear-gradient(45deg, #667eea 0%, #764ba2 100%);
            border: none;
        }
        
        .btn-primary:hover {
            background: linear-gradient(45deg, #764ba2 0%, #667eea 100%);
        }
        
        .shadow-stat {
            color: #9d4edd;
        }
        
        .gold-stat {
            color: #ffd700;
        }
        
        .level-stat {
            color: #00d4ff;
        }
        
        .chart-container {
            position: relative;
            height: 300px;
        }
        
        .footer {
            background: rgba(0, 0, 0, 0.3);
            margin-top: 3rem;
        }
    </style>
</head>
<body>
    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg navbar-dark">
        <div class="container">
            <a class="navbar-brand" href="#">
                <i class="fas fa-crown"></i>
                Solo Leveling RPG Dashboard
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="#overview">Overview</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#hunters">Hunters</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#pvp">PvP</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#stats">Statistics</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="container mt-4">
        <!-- Header -->
        <div class="row mb-4">
            <div class="col-12">
                <h1 class="display-4 text-center mb-3">
                    <i class="fas fa-dungeon"></i>
                    Solo Leveling RPG Dashboard
                </h1>
                <p class="lead text-center">
                    Monitor hunters, battles, and game statistics in real-time
                </p>
            </div>
        </div>

        <!-- Error Display -->
        <% if (locals.error) { %>
        <div class="alert alert-danger" role="alert">
            <i class="fas fa-exclamation-triangle"></i>
            <%= error %>
        </div>
        <% } %>

        <!-- Overview Stats -->
        <section id="overview" class="mb-5">
            <div class="row">
                <div class="col-md-3 mb-3">
                    <div class="card stat-card h-100">
                        <div class="card-body text-center">
                            <i class="fas fa-users fa-3x mb-3 level-stat"></i>
                            <h5 class="card-title">Total Hunters</h5>
                            <h2 class="level-stat"><%= stats.totalHunters %></h2>
                        </div>
                    </div>
                </div>
                <div class="col-md-3 mb-3">
                    <div class="card stat-card h-100">
                        <div class="card-body text-center">
                            <i class="fas fa-level-up-alt fa-3x mb-3 level-stat"></i>
                            <h5 class="card-title">Average Level</h5>
                            <h2 class="level-stat"><%= stats.averageLevel %></h2>
                        </div>
                    </div>
                </div>
                <div class="col-md-3 mb-3">
                    <div class="card stat-card h-100">
                        <div class="card-body text-center">
                            <i class="fas fa-coins fa-3x mb-3 gold-stat"></i>
                            <h5 class="card-title">Total Gold</h5>
                            <h2 class="gold-stat"><%= stats.totalGold.toLocaleString() %></h2>
                        </div>
                    </div>
                </div>
                <div class="col-md-3 mb-3">
                    <div class="card stat-card h-100">
                        <div class="card-body text-center">
                            <i class="fas fa-ghost fa-3x mb-3 shadow-stat"></i>
                            <h5 class="card-title">Total Shadows</h5>
                            <h2 class="shadow-stat"><%= stats.totalShadows %></h2>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Rank Distribution Chart -->
        <section id="stats" class="mb-5">
            <div class="row">
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header">
                            <h5><i class="fas fa-chart-pie"></i> Rank Distribution</h5>
                        </div>
                        <div class="card-body">
                            <div class="chart-container">
                                <canvas id="rankChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header">
                            <h5><i class="fas fa-trophy"></i> PvP Statistics</h5>
                        </div>
                        <div class="card-body">
                            <div class="row text-center">
                                <div class="col-12 mb-3">
                                    <h3 class="level-stat"><%= stats.pvpStats.totalBattles %></h3>
                                    <p>Total PvP Battles</p>
                                </div>
                            </div>
                            <% if (stats.pvpStats.topPvPHunters.length > 0) { %>
                            <h6>Top PvP Hunters:</h6>
                            <% stats.pvpStats.topPvPHunters.forEach((hunter, index) => { %>
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <span>#<%= index + 1 %> Level <%= hunter.level %></span>
                                <span>
                                    <span class="badge bg-success"><%= hunter.wins %>W</span>
                                    <span class="badge bg-danger"><%= hunter.losses %>L</span>
                                    <span class="rank-badge rank-<%= hunter.rank.replace(' ', '') %>"><%= hunter.rank %></span>
                                </span>
                            </div>
                            <% }); %>
                            <% } else { %>
                            <p class="text-muted">No PvP battles recorded yet</p>
                            <% } %>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Top Hunters -->
        <section id="hunters" class="mb-5">
            <div class="card">
                <div class="card-header">
                    <h5><i class="fas fa-crown"></i> Top Hunters</h5>
                </div>
                <div class="card-body">
                    <% if (stats.topHunters.length > 0) { %>
                    <div class="table-responsive">
                        <table class="table table-dark table-striped">
                            <thead>
                                <tr>
                                    <th>Rank</th>
                                    <th>Level</th>
                                    <th>Hunter Rank</th>
                                    <th>Gold</th>
                                    <th>Shadows</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% stats.topHunters.forEach((hunter, index) => { %>
                                <tr>
                                    <td>
                                        <% if (index < 3) { %>
                                            <i class="fas fa-medal" style="color: <%= index === 0 ? '#ffd700' : index === 1 ? '#c0c0c0' : '#cd7f32' %>"></i>
                                        <% } %>
                                        #<%= index + 1 %>
                                    </td>
                                    <td class="level-stat fw-bold"><%= hunter.level %></td>
                                    <td><span class="rank-badge rank-<%= hunter.rank %>"><%= hunter.rank %></span></td>
                                    <td class="gold-stat"><%= hunter.gold.toLocaleString() %></td>
                                    <td class="shadow-stat"><%= hunter.shadows %></td>
                                </tr>
                                <% }); %>
                            </tbody>
                        </table>
                    </div>
                    <% } else { %>
                    <p class="text-muted text-center">No hunters registered yet</p>
                    <% } %>
                </div>
            </div>
        </section>

        <!-- Game Information -->
        <section id="game-info" class="mb-5">
            <div class="row">
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-header">
                            <h6><i class="fas fa-dragon"></i> Available Monsters</h6>
                        </div>
                        <div class="card-body">
                            <% if (gameData.monsters && gameData.monsters.monsters) { %>
                                <% Object.keys(gameData.monsters.monsters).forEach(rank => { %>
                                <div class="mb-2">
                                    <strong><%= rank %>:</strong> <%= gameData.monsters.monsters[rank].length %> monsters
                                </div>
                                <% }); %>
                            <% } else { %>
                            <p class="text-muted">Monster data not available</p>
                            <% } %>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-header">
                            <h6><i class="fas fa-door-open"></i> Available Gates</h6>
                        </div>
                        <div class="card-body">
                            <% if (gameData.gates && gameData.gates.gates) { %>
                                <% Object.keys(gameData.gates.gates).forEach(rank => { %>
                                <div class="mb-2">
                                    <strong><%= rank %>:</strong> <%= gameData.gates.gates[rank].length %> gates
                                </div>
                                <% }); %>
                            <% } else { %>
                            <p class="text-muted">Gates data not available</p>
                            <% } %>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-header">
                            <h6><i class="fas fa-sword"></i> Available Items</h6>
                        </div>
                        <div class="card-body">
                            <% if (gameData.items) { %>
                                <% Object.keys(gameData.items).forEach(category => { %>
                                <div class="mb-2">
                                    <strong><%= category.charAt(0).toUpperCase() + category.slice(1) %>:</strong> 
                                    <%= Object.keys(gameData.items[category]).length %> items
                                </div>
                                <% }); %>
                            <% } else { %>
                            <p class="text-muted">Items data not available</p>
                            <% } %>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Real-time Updates -->
        <section class="mb-5">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h6><i class="fas fa-sync"></i> Real-time Status</h6>
                    <button class="btn btn-primary btn-sm" onclick="refreshData()">
                        <i class="fas fa-refresh"></i> Refresh
                    </button>
                </div>
                <div class="card-body">
                    <div class="row text-center">
                        <div class="col-md-6">
                            <p><i class="fas fa-clock"></i> Last Updated: <span id="lastUpdate"><%= new Date().toLocaleString() %></span></p>
                        </div>
                        <div class="col-md-6">
                            <p><i class="fas fa-server"></i> Server Status: <span class="badge bg-success">Online</span></p>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>

    <!-- Footer -->
    <footer class="footer py-4">
        <div class="container text-center">
            <p>&copy; 2024 Solo Leveling RPG Discord Bot. All rights reserved.</p>
            <p class="text-muted">Dashboard powered by Express.js and Bootstrap</p>
        </div>
    </footer>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        // Initialize rank distribution chart
        const rankData = <%- JSON.stringify(stats.rankDistribution) %>;
        const ctx = document.getElementById('rankChart').getContext('2d');
        
        new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: Object.keys(rankData),
                datasets: [{
                    data: Object.values(rankData),
                    backgroundColor: [
                        '#6c757d', // E-Rank
                        '#28a745', // D-Rank
                        '#17a2b8', // C-Rank
                        '#ffc107', // B-Rank
                        '#fd7e14', // A-Rank
                        '#dc3545', // S-Rank
                        '#ffd700'  // National Level
                    ],
                    borderWidth: 2,
                    borderColor: '#ffffff'
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom',
                        labels: {
                            color: '#ffffff',
                            padding: 20
                        }
                    }
                }
            }
        });

        // Auto-refresh functionality
        let autoRefresh = false;
        
        function refreshData() {
            location.reload();
        }
        
        function toggleAutoRefresh() {
            autoRefresh = !autoRefresh;
            if (autoRefresh) {
                setInterval(refreshData, 30000); // Refresh every 30 seconds
            }
        }
        
        // Update last update time
        function updateTimestamp() {
            document.getElementById('lastUpdate').textContent = new Date().toLocaleString();
        }
        
        // Update timestamp every minute
        setInterval(updateTimestamp, 60000);
        
        // Smooth scrolling for navigation links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    target.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                }
            });
        });
        
        // Add loading states for buttons
        function addLoadingState(button) {
            const originalText = button.innerHTML;
            button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Loading...';
            button.disabled = true;
            
            setTimeout(() => {
                button.innerHTML = originalText;
                button.disabled = false;
            }, 2000);
        }
        
        // Add click handlers for interactive elements
        document.addEventListener('DOMContentLoaded', function() {
            // Add hover effects to cards
            document.querySelectorAll('.stat-card').forEach(card => {
                card.addEventListener('mouseenter', function() {
                    this.style.transform = 'translateY(-5px)';
                });
                
                card.addEventListener('mouseleave', function() {
                    this.style.transform = 'translateY(0)';
                });
            });
        });
    </script>
</body>
</html>
