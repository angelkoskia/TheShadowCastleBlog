✅ 1. Working .hunt Command
Prevents duplicate private channels

Sends victory/XP/gold messages

Blocks multiple simultaneous hunts

✅ 2. Full Boss Event System
Creates a private channel

Sends a boss intro embed

Provides a simple battle UI via reactions or buttons

Resolves battle with random logic

Displays rewards and ends properly

✅ 3. UI Options
Reaction-based UI (easy and fast)

Button-based UI using discord.ui.View (modern style)

Let’s start by setting up a basic file structure suggestion (for clarity):

css
Copy
Edit
bot/
├── main.py
├── commands/
│   ├── hunt.py
│   └── events.py
├── data/
│   └── bosses.json
🔧 STEP 1: .hunt Command Fix
📄 hunt.py
python
Copy
Edit
import discord
from discord.ext import commands
import random

active_hunts = set()

async def create_private_channel(ctx):
    guild = ctx.guild
    existing = discord.utils.get(guild.text_channels, name=f"{ctx.author.name.lower()}-hunt")
    if existing:
        return existing

    overwrites = {
        guild.default_role: discord.PermissionOverwrite(read_messages=False),
        ctx.author: discord.PermissionOverwrite(read_messages=True)
    }

    channel = await guild.create_text_channel(
        f"{ctx.author.name.lower()}-hunt",
        overwrites=overwrites,
        category=None  # Or replace with your desired category
    )
    return channel

async def run_hunt(ctx):
    if ctx.author.id in active_hunts:
        await ctx.send("⚠️ You're already on a hunt!")
        return

    active_hunts.add(ctx.author.id)
    try:
        channel = await create_private_channel(ctx)

        await channel.send(f"{ctx.author.mention}, your hunt has begun...")

        # Simulate a fight
        await channel.send("Fighting... 🗡️")
        await asyncio.sleep(2)

        result = random.choice(["victory", "defeat"])
        xp = random.randint(100, 300)
        gold = random.randint(50, 150)

        if result == "victory":
            await channel.send(f"🎉 **Victory!** You gained 💰{gold} Gold and ⭐{xp} XP!")
        else:
            await channel.send("💀 **Defeat.** You return home empty-handed.")

    finally:
        active_hunts.remove(ctx.author.id)

# Command setup
def setup(bot):
    @bot.command()
    async def hunt(ctx):
        await run_hunt(ctx)
🧨 STEP 2: Boss Event with Reactions
📄 events.py
python
Copy
Edit
import discord
from discord.ext import commands
import random
import asyncio

bosses = [
    {
        "name": "Rakanar",
        "description": "A beast that shakes the world with each step.",
        "hp": 100000,
        "atk": 5000,
        "def": 800,
        "abilities": ["Savage Charge", "Stompquake"],
        "rewards": ["Legendary Horn Blade", "20000 XP"]
    },
    {
        "name": "Kamish",
        "description": "The dragon who destroyed nations. 🔥",
        "hp": 200000,
        "atk": 8000,
        "def": 1200,
        "abilities": ["Hellfire Breath", "Wing Cyclone"],
        "rewards": ["Kamish’s Flames", "30000 XP"]
    }
]

async def create_event_channel(ctx, boss_name):
    guild = ctx.guild
    overwrites = {
        guild.default_role: discord.PermissionOverwrite(read_messages=False),
        ctx.author: discord.PermissionOverwrite(read_messages=True)
    }

    channel = await guild.create_text_channel(
        name=f"{ctx.author.name.lower()}-event",
        overwrites=overwrites,
        category=None
    )
    return channel

async def wait_for_battle_reaction(channel, msg, user, boss):
    def check(reaction, reactor):
        return reactor == user and str(reaction.emoji) in ["⚔️", "🛡️", "🏃"] and reaction.message.id == msg.id

    try:
        while boss["hp"] > 0:
            reaction, reactor = await channel.bot.wait_for("reaction_add", timeout=60, check=check)
            if str(reaction.emoji) == "⚔️":
                dmg = random.randint(3000, 8000)
                boss["hp"] -= dmg
                await channel.send(f"🗡️ You dealt {dmg} damage. Boss HP: {boss['hp']}")
            elif str(reaction.emoji) == "🛡️":
                await channel.send("🛡️ You brace for the next attack.")
            elif str(reaction.emoji) == "🏃":
                await channel.send("🏃 You fled the battle.")
                return

            if boss["hp"] > 0:
                await channel.send(f"💥 {boss['name']} used **{random.choice(boss['abilities'])}**!")

        await channel.send(f"🎉 Victory! You defeated {boss['name']} and earned: {', '.join(boss['rewards'])}")
    except asyncio.TimeoutError:
        await channel.send("⌛ The boss vanished after no action.")

# Command
def setup(bot):
    @bot.command()
    async def event(ctx):
        boss = random.choice(bosses)
        channel = await create_event_channel(ctx, boss["name"])

        embed = discord.Embed(
            title=f"⚠️ Boss Event – {boss['name']}",
            description=boss["description"],
            color=discord.Color.red()
        ).add_field(
            name="Stats",
            value=f"HP: {boss['hp']}\nATK: {boss['atk']}\nDEF: {boss['def']}"
        ).set_footer(text="React to fight!")

        await channel.send(embed=embed)
        msg = await channel.send("React:\n⚔️ Attack | 🛡️ Defend | 🏃 Run")
        for emoji in ["⚔️", "🛡️", "🏃"]:
            await msg.add_reaction(emoji)

        await wait_for_battle_reaction(channel, msg, ctx.author, boss)
🆕 STEP 3: Optional — Button UI (Modern Style)
If you'd prefer a modern button UI (recommended), I can build a discord.ui.View version next.

✅ To Use These Files:
In main.py
python
Copy
Edit
from discord.ext import commands
import discord
import os

intents = discord.Intents.default()
intents.message_content = True
intents.reactions = True

bot = commands.Bot(command_prefix=".", intents=intents)

# Load command modules
for filename in os.listdir("./commands"):
    if filename.endswith(".py"):
        bot.load_extension(f"commands.{filename[:-3]}")

bot.run("YOUR_TOKEN")
